name: Fetch and Build Design Tokens

on:
  # Trigger the workflow when pushing to the main branch or manually via workflow_dispatch
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  fetch-and-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'  # Upgrade Node.js version to 18

      - name: Install dependencies
        run: |
          npm install axios style-dictionary

      - name: Fetch design tokens from Figma
        env:
          FIGMA_TOKEN: ${{ secrets.FIGMA_TOKEN }}
          FIGMA_FILE_ID: ${{ secrets.FIGMA_FILE_ID }}
        run: |
          node -e "
          const axios = require('axios');
          const fs = require('fs');

          const FIGMA_TOKEN = process.env.FIGMA_TOKEN;
          const FILE_ID = process.env.FIGMA_FILE_ID;

          async function fetchFigmaTokens() {
            try {
              const response = await axios.get(\`https://api.figma.com/v1/files/\${FILE_ID}\`, {
                headers: {
                  'X-Figma-Token': FIGMA_TOKEN,
                },
              });

              const data = response.data;
              const tokens = {};

              if (data && data.styles) {
                for (const [key, value] of Object.entries(data.styles)) {
                  if (value.styleType === 'FILL') {
                    tokens[value.name] = value.description || key;
                  }
                }
              }

              fs.writeFileSync('tokens.json', JSON.stringify(tokens, null, 2));
              console.log('Tokens successfully saved to tokens.json');
            } catch (error) {
              console.error('Error fetching tokens from Figma:', error);
            }
          }

          fetchFigmaTokens();
          "

      - name: Build tokens with Style Dictionary
        run: |
          echo '{
            "source": ["tokens.json"],
            "platforms": {
              "css": {
                "transformGroup": "css",
                "buildPath": "build/css/",
                "files": [
                  {
                    "destination": "tokens.css",
                    "format": "css/variables"
                  }
                ]
              }
            }
          }' > config.json

          npx style-dictionary build --config config.json

      - name: Commit and push changes
        if: github.ref == 'refs/heads/main'
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git add build/
          git commit -m 'Update design tokens [skip ci]'
          git push origin main
